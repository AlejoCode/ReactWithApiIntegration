[{"/Users/daniel/Desktop/projects/build_daniel_salgado/src/Profile.js":"1","/Users/daniel/Desktop/projects/build_daniel_salgado/src/RepoList.js":"2","/Users/daniel/Desktop/projects/build_daniel_salgado/src/HeaderComponent.js":"3","/Users/daniel/Desktop/projects/build_daniel_salgado/src/Login.js":"4","/Users/daniel/Desktop/projects/build_daniel_salgado/src/SignUp.js":"5","/Users/daniel/Desktop/projects/build_daniel_salgado/src/Main.js":"6","/Users/daniel/Desktop/projects/build_daniel_salgado/src/FooterComponent.js":"7","/Users/daniel/Desktop/projects/build_daniel_salgado/src/withListLoading.js":"8","/Users/daniel/Desktop/projects/build_daniel_salgado/src/index.js":"9"},{"size":8954,"mtime":1610933292000,"results":"10","hashOfConfig":"11"},{"size":817,"mtime":1610830790000,"results":"12","hashOfConfig":"11"},{"size":4947,"mtime":1610760092000,"results":"13","hashOfConfig":"11"},{"size":4725,"mtime":1610832528000,"results":"14","hashOfConfig":"11"},{"size":5278,"mtime":1610829931000,"results":"15","hashOfConfig":"11"},{"size":966,"mtime":1610932796000,"results":"16","hashOfConfig":"11"},{"size":2318,"mtime":1610832145000,"results":"17","hashOfConfig":"11"},{"size":367,"mtime":1610754375000,"results":"18","hashOfConfig":"11"},{"size":297,"mtime":1610641710000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1nkti2m",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/daniel/Desktop/projects/build_daniel_salgado/src/Profile.js",["43","44","45"],"/Users/daniel/Desktop/projects/build_daniel_salgado/src/RepoList.js",[],"/Users/daniel/Desktop/projects/build_daniel_salgado/src/HeaderComponent.js",["46"],"import React, { Component } from 'react'\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, FormGroup, Form, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        \n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n    }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n\n      toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n      handleLogin(event) {\n          alert(\"entered login\")\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n            console.log(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/helloBuildLogo.png' height=\"30\" width=\"41\" alt='build Daniel Salgado' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"ml-3 nav-link\"  to='/home'><span className=\"fa fa-sign-in fa-lg\"></span> Sign Up</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"ml-4 nav-link\" to='/login'><span className=\"fa fa-user-circle fa-lg\"></span> Log in</NavLink>\n                            </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <NavLink className=\"ml-3 nav-link\"  to='/home'><span className=\"fa fa-sign-in fa-lg\"></span></NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                {/* <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Daniel Alejandro Salgado</h1>\n                                <p>Full Stack Software Developer, Focused in building software that connects with the user intuitively by having the best user interface possible. This will be acomplished by making the most robust application for delight the users with the Vanguard in software development in visual and infraestructure terms. </p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron> */}\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Login\n                    </ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport  default  Header;\n",["47","48"],"/Users/daniel/Desktop/projects/build_daniel_salgado/src/Login.js",["49","50","51","52","53","54","55","56","57","58"],"import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Col, FormFeedback,Row } from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form'\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Login extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    handleLogin(values) {\n\n        const formEmail = values.email;\n        const formPassword = values.password;\n        const userEmail = localStorage.getItem('userEmail');\n        const userPassword = localStorage.getItem('userPassWord');\n\n        if(formEmail == userEmail && formPassword == userPassword) {\n            alert(\"Access granted c:\");\n            localStorage.setItem('userLogged', true);\n            this.props.history.push('/profile');\n        } else if (formEmail == userEmail) {\n            alert(\"Password is incorrect, please try again !\")\n        } else if (formPassword == userPassword) {\n            alert(\"Email is incorrect, please try again !\")\n        } else {\n            alert(\"Password & Email are incorrect :c\");\n        }\n        \n    }\n\n  render() {\n    return (\n        <div className=\"container\">\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3 className=\"text-center\">Log In</h3>\n                </div>\n                <div className=\"col-md-2\">\n                </div>\n                <div className=\"col-12 col-md-8\">\n                    <LocalForm onSubmit={(values) => this.handleLogin(values)}>\n                        <Row className=\"form-group pt-3\">\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                            <Col md={10}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, validEmail\n                                    }}\n                                        />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is required ,',\n                                        validEmail: ' Invalid Email Address'\n                                    }}\n                                    />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group pt-3\">\n                            <Label htmlFor=\"password\" md={2}>Password</Label>\n                            <Col md={10}>\n                                <Control.password model=\".password\" id=\"password\" name=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required, minLength: minLength(6), maxLength: maxLength(15)\n                                    }}\n                                        />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".password\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required: 'This is required ,',\n                                        minLength: ' Must be greater than 5 numbers',\n                                        maxLength: ' Must be 15 numbers or less',\n                                    }}\n                                    />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group text-center pt-4 pr-5\">\n                            <Col md={{size:10, offset:2}}>\n                                <Button type=\"submit\" color=\"success\">\n                                    Log In\n                                </Button>\n                            </Col>\n                        </Row>\n                    </LocalForm>\n                </div>\n                <div className=\"col-md-2\">\n                </div>\n            </div>\n        </div>\n    );\n  }\n\n}\n \nexport default Login;\n","/Users/daniel/Desktop/projects/build_daniel_salgado/src/SignUp.js",["59","60","61","62","63","64"],"import React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Col,Row } from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form'\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass SignUp extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        localStorage.setItem('userName', values.name);\n        localStorage.setItem('userEmail', values.email);\n        localStorage.setItem('userPassWord', values.password);\n        alert(\"User Registered now go ahead and Login ! \");\n        this.props.history.push('/login');\n\n    }\n\n  render() {\n\n    return (\n\n    <div className=\"container\">\n\n        <div className=\"row row-content\">\n        <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-12 col-md-8 text-center pb-4\">\n                <h3 className=\"pl-5\">Sign Up</h3>\n            </div>\n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-md-2\">\n            </div>\n            <div className=\"col-12 col-md-8\">\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Label htmlFor=\"name\" md={2}> Name</Label>\n                        <Col md={10}>\n                            <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                placeholder=\"Name\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                }}\n                                    />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".name\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'This is required ,',\n                                    minLength: ' Must be greater than 2 characters',\n                                    maxLength: ' Must be 15 characters or less'\n                                }}\n                                />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group pt-3\">\n                        <Label htmlFor=\"email\" md={2}>Email</Label>\n                        <Col md={10}>\n                            <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                placeholder=\"Email\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, validEmail\n                                }}\n                                    />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".email\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'This is required ,',\n                                    validEmail: ' Invalid Email Address'\n                                }}\n                                />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group pt-3\">\n                        <Label htmlFor=\"password\" md={2}>Password</Label>\n                        <Col md={10}>\n                            <Control.password model=\".password\" id=\"password\" name=\"password\"\n                                placeholder=\"Password\"\n                                className=\"form-control\"\n                                validators={{\n                                    required, minLength: minLength(6), maxLength: maxLength(15)\n                                }}\n                                    />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".password\"\n                                show=\"touched\"\n                                messages={{\n                                    required: 'This is required ,',\n                                    minLength: ' Must be greater than 5 numbers',\n                                    maxLength: ' Must be 15 numbers or less',\n                                }}\n                                />\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group text-center pt-4 pr-5\">\n                        <Col md={{size:10, offset:2}}>\n                            <Button type=\"submit\" color=\"success\">\n                                Sign Up\n                            </Button>\n                        </Col>\n                    </Row>\n                </LocalForm>\n            </div>\n            <div className=\"col-md-2\">\n            </div>\n        </div>\n    </div>\n\n    );\n  }\n}\n \nexport default SignUp;","/Users/daniel/Desktop/projects/build_daniel_salgado/src/Main.js",["65","66"],"import React, { Component } from \"react\";\nimport SignUp from './SignUp'\nimport Header from './HeaderComponent'\nimport Login from './Login'\nimport Profile from './Profile'\nimport Footer from './FooterComponent'\nimport { BrowserRouter, Switch, Route, Redirect, withRouter  } from 'react-router-dom'\n\nimport './App.css';\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <Header />\n                    <Switch>\n                        <Route path=\"/home\" component={SignUp}/>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/profile\" component={Profile}/>\n                        <Redirect to=\"/home\" />\n                    </Switch>\n                    <Footer />\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default (Main);","/Users/daniel/Desktop/projects/build_daniel_salgado/src/FooterComponent.js",["67","68","69","70"],"/Users/daniel/Desktop/projects/build_daniel_salgado/src/withListLoading.js",[],"/Users/daniel/Desktop/projects/build_daniel_salgado/src/index.js",[],{"ruleId":"71","severity":1,"message":"72","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":23},{"ruleId":"71","severity":1,"message":"75","line":2,"column":139,"nodeType":"73","messageId":"74","endLine":2,"endColumn":143},{"ruleId":"76","severity":1,"message":"77","line":141,"column":37,"nodeType":"78","endLine":147,"endColumn":39},{"ruleId":"71","severity":1,"message":"79","line":2,"column":70,"nodeType":"73","messageId":"74","endLine":2,"endColumn":79},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"71","severity":1,"message":"75","line":2,"column":18,"nodeType":"73","messageId":"74","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"84","line":2,"column":24,"nodeType":"73","messageId":"74","endLine":2,"endColumn":33},{"ruleId":"71","severity":1,"message":"85","line":2,"column":42,"nodeType":"73","messageId":"74","endLine":2,"endColumn":47},{"ruleId":"71","severity":1,"message":"86","line":2,"column":54,"nodeType":"73","messageId":"74","endLine":2,"endColumn":66},{"ruleId":"87","severity":1,"message":"88","line":26,"column":22,"nodeType":"89","messageId":"90","endLine":26,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":26,"column":51,"nodeType":"89","messageId":"90","endLine":26,"endColumn":53},{"ruleId":"87","severity":1,"message":"88","line":30,"column":30,"nodeType":"89","messageId":"90","endLine":30,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":32,"column":33,"nodeType":"89","messageId":"90","endLine":32,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":54,"column":33,"nodeType":"78","endLine":60,"endColumn":43},{"ruleId":"76","severity":1,"message":"91","line":75,"column":33,"nodeType":"78","endLine":81,"endColumn":43},{"ruleId":"71","severity":1,"message":"75","line":2,"column":18,"nodeType":"73","messageId":"74","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"84","line":2,"column":24,"nodeType":"73","messageId":"74","endLine":2,"endColumn":33},{"ruleId":"71","severity":1,"message":"85","line":2,"column":42,"nodeType":"73","messageId":"74","endLine":2,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":49,"column":29,"nodeType":"78","endLine":55,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":71,"column":29,"nodeType":"78","endLine":77,"endColumn":39},{"ruleId":"76","severity":1,"message":"91","line":92,"column":29,"nodeType":"78","endLine":98,"endColumn":39},{"ruleId":"71","severity":1,"message":"92","line":7,"column":50,"nodeType":"73","messageId":"74","endLine":7,"endColumn":60},{"ruleId":"93","severity":1,"message":"94","line":13,"column":5,"nodeType":"95","messageId":"96","endLine":15,"endColumn":6},{"ruleId":"71","severity":1,"message":"97","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":30,"column":155,"nodeType":"100","endLine":30,"endColumn":170},{"ruleId":"98","severity":1,"message":"99","line":31,"column":119,"nodeType":"100","endLine":31,"endColumn":134},{"ruleId":"98","severity":1,"message":"99","line":32,"column":116,"nodeType":"100","endLine":32,"endColumn":131},"no-unused-vars","'CardImg' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Jumbotron' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'FormGroup' is defined but never used.","'Input' is defined but never used.","'FormFeedback' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Imported JSX component password must be in PascalCase or SCREAMING_SNAKE_CASE","'withRouter' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation"]